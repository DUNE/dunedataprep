# vdcb_dataprep_sequences.fcl
#
# David Adams
# December 2021
#
# Dataprep tool sequences for processing vertical-drift data taken in
# CERN cold box in November 2021.
# Notation:
#    vdcb - vertical-drift coldbox
#   vdbcb - vertical-drift coldbox bottom electronics
#   vdtcb - vertical-drift coldbox top electronics
#     adc - ADC scale
#  nomcal - Nominal calibration to charge scale. Same gain for all channels.
#           Charge scale means integration of pulse gives charge in ke.
#     cnr - Correlated noise removal.

# No processing. Stay at ADC scale.
# Bottom or top.
data.vdcb_dataprep_seqs.nocal: [
  digitReader,
  adcSampleFiller,
  adcKeepAllSignalFinder
]

# Nominal charge scale. No processing.
# Bottom
data.vdbcb_dataprep_seqs.nomcal: [
  digitReader,
  adcSampleFiller,
  vdbcb_adcScaleAdcToKe,
  adcKeepAllSignalFinder
]
# Top
data.vdtcb_dataprep_seqs.nomcal: [
  digitReader,
  adcSampleFiller,
  vdtcb_adcScaleAdcToKe,
  adcKeepAllSignalFinder
]

# Nominal charge scale with CNR.
# Bottom
data.vdbcb_dataprep_seqs.nomcal_cnr: [
  digitReader,
  vdbcb_adcChannelRawRmsFiller,
  adcSampleFiller,
  vdbcb_adcScaleAdcToKe,
  vdbcb_cnrw,
  adcKeepAllSignalFinder
]
# Top CRP1
data.vdtcb1_dataprep_seqs.nomcal_cnr: [
  digitReader,
  adcSampleFiller,
  vdtcb_adcScaleAdcToKe,
  vdtcb1_cnr,
  adcKeepAllSignalFinder
]

# CNR with output at ADC scale for wirecell.
# Bottom. Processing at charge scale then converted back to ADC.
data.vdbcb_dataprep_seqs.nomcal_cnr_adc: [
  @sequence::data.vdbcb_dataprep_seqs.nomcal_cnr,
  vdbcb_adcScaleKeToAdc
]

# rm bad channels
data.vdbcb_dataprep_seqs.nomcal_cnr_adc_rmbadch: [
  @sequence::data.vdbcb_dataprep_seqs.nomcal_cnr_adc,
  vdcb_RemoveBadChannels
]

# Top processing at charge scale. CRP1.
data.vdtcb1_dataprep_seqs.adc_cnr: [
  digitReader,
  adcSampleFiller,
  vdtcb1_cnr,
  adcKeepAllSignalFinder
]
# Top processing at charge scale. CRP2 and later.

# ADC scale
data.vdtcb2_dataprep_seqs.adc_cnr: [
  digitReader,
  adcSampleFiller,
  vdtcb2_cnr,
  adcKeepAllSignalFinder
]
data.vdtcb2_dataprep_seqs.adc_cnrw: [
  digitReader,
  vdtcb_adcChannelRawRmsFiller,
  adcSampleFiller,
  vdtcb2_cnrw,
  adcKeepAllSignalFinder
]

# charge scale
data.vdtcb2_dataprep_seqs.nomcal_cnr: [
 digitReader,
 adcSampleFiller,
 vdtcb2_adcScaleAdcToKe,
 vdtcb2_cnr,
 adcKeepAllSignalFinder
]
data.vdtcb2_dataprep_seqs.nomcal_cnrw: [
 digitReader,
 vdtcb_adcChannelRawRmsFiller,
 adcSampleFiller,
 vdtcb2_adcScaleAdcToKe,
 vdtcb2_cnrw,
 adcKeepAllSignalFinder
]

# rm bad channels
data.vdtcb1_dataprep_seqs.adc_cnr_rmbadch: [
  @sequence::data.vdtcb1_dataprep_seqs.adc_cnr,
  vdcb_RemoveBadChannels
]
data.vdtcb2_dataprep_seqs.adc_cnr_rmbadch: [
  @sequence::data.vdtcb2_dataprep_seqs.adc_cnr,
  vdcb_RemoveBadChannels
]
data.vdtcb2_dataprep_seqs.adc_cnrw_rmbadch: [
  @sequence::data.vdtcb2_dataprep_seqs.adc_cnrw,
  vdcb_RemoveBadChannels
]
data.vdtcb2_dataprep_seqs.nomcal_cnrw_rmbadch: [
  @sequence::data.vdtcb2_dataprep_seqs.nomcal_cnrw,
  vdcb_RemoveBadChannels
]
data.vdtcb2_dataprep_seqs.nomcal_cnr_rmbadch: [
  @sequence::data.vdtcb2_dataprep_seqs.nomcal_cnr,
  vdcb_RemoveBadChannels
]
